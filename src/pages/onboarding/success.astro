---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Subscription Confirmed - Sonacove Meets">
  <div id="success-content" class="container mx-auto px-4 py-12" style="display: none;">
    <div class="max-w-md mx-auto bg-white rounded-xl shadow-lg overflow-hidden p-8">
      <div class="text-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-green-500 mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        
        <h1 class="text-2xl font-bold mt-4 mb-2">Subscription Confirmed!</h1>
        <p class="text-gray-600 mb-6">
          Thank you for subscribing to Sonacove Meets. Your account is now active.
        </p>
        
        <div id="user-details" class="bg-gray-50 rounded-lg p-4 mb-6 text-left" style="display: none;">
          <p class="font-medium text-gray-800">Account Details:</p>
          <p class="text-gray-600">Email: <span id="user-email"></span></p>
          <p class="text-gray-600">Name: <span id="user-name"></span></p>
        </div>
        
        <p class="text-gray-600 mb-6">
          You're all set! Click the button below to start using Sonacove Meets.
        </p>
        
        <a 
          href="https://meet.sonacove.com" 
          class="inline-block px-6 py-3 bg-gradient-to-r from-primary-600 to-accent-600 text-white font-medium rounded-lg hover:opacity-90 transition-all transform hover:scale-[1.02]"
        >
          Go to Sonacove Meets
        </a>
      </div>
    </div>
  </div>

  <div id="error-content" class="container mx-auto px-4 py-12" style="display: none;">
    <div class="max-w-md mx-auto bg-white rounded-xl shadow-lg overflow-hidden p-8">
      <div class="text-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-red-500 mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h1 class="text-2xl font-bold mt-4 mb-2">Authentication Error</h1>
        <p class="text-gray-600 mb-6">
          Unable to verify your subscription. Please try again or contact support.
        </p>
        <a 
          href="/onboarding" 
          class="inline-block px-6 py-3 bg-gray-600 text-white font-medium rounded-lg hover:bg-gray-700 transition-all"
        >
          Return to Onboarding
        </a>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { validateKeycloakToken, parseUserFromToken } from "../../utils/auth";

  async function init() {
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get('token');
    
    if (!token) {
      window.location.href = '/onboarding';
      return;
    }

    try {
      const isAuthenticated = await validateKeycloakToken(token);
      if (isAuthenticated) {
        const user = parseUserFromToken(token);
        if (user) {
          const emailElement = document.getElementById('user-email');
          const nameElement = document.getElementById('user-name');
          const userDetailsElement = document.getElementById('user-details');
          const successContent = document.getElementById('success-content');

          if (emailElement && nameElement && userDetailsElement && successContent) {
            emailElement.textContent = user.email;
            nameElement.textContent = user.name;
            userDetailsElement.style.removeProperty('display');
            successContent.style.removeProperty('display');
          }
        }
      } else {
        const errorContent = document.getElementById('error-content');
        if (errorContent) {
          errorContent.style.removeProperty('display');
        }
      }
    } catch (error) {
      console.error("Error validating token:", error);
      const errorContent = document.getElementById('error-content');
      if (errorContent) {
        errorContent.style.removeProperty('display');
      }
    }
  }

  init();
</script> 