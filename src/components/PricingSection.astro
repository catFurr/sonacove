---
const plans = [
  {
    title: "Free Plan",
    price: "$0",
    originalPrice: "$0",
    features: [
      "Up to 1000 total meeting minutes",
      "Up to 100 guests per meeting",
      "End-to-end encryption",
      "Screen sharing",
      "Live Recording",
      "Breakout rooms",
    ],
    highlighted: false,
    footer: {
      message: "Start for free â€” no credit card required.",
      buttonText: "Get Started",
      buttonLink: "/onboarding"
    }
  },
  {
    title: "Premium Plan",
    price: "$9",
    originalPrice: "$12",
    features: [
      "Unlimited meeting duration",
      "Up to 100 guests per meeting",
      "End-to-end encryption",
      "Screen sharing",
      "Live Recording",
      "Breakout rooms"
    ],
    highlighted: true,
    footer: {
      message: "Our service is now live. Sign up today to start your premium meetings.",
      buttonText: "Get Started",
      buttonLink: "/onboarding"
    }
  },
  {
    title: "Organization Plan",
    price: "$15",
    originalPrice: "$15",
    features: [
      "All Premium features",
      "Up to 1000 guests",
      "Custom Authentication"
    ],
    highlighted: false,
    footer: {
      message: "Need a custom solution? Contact us to learn more.",
      buttonText: "support@sonacove.com",
      buttonLink: "mailto:support@sonacove.com"
    }
  }
];

const highlightedPlan = plans.find((p) => p.highlighted);
const sortedPlans = highlightedPlan
  ? [
      ...plans.filter((p) => p.title !== highlightedPlan.title),
    ].splice(1, 0, highlightedPlan)
  : plans;
---

<section class="py-16 bg-white" id="pricing">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold text-center text-gray-800 mb-4">
      Simple, Transparent Pricing
    </h2>
    <p class="text-xl text-gray-600 text-center mb-16 max-w-3xl mx-auto">
      No hidden fees, no complicated tiers. Just one affordable plan for all your meeting needs.
    </p>

    <!-- Mobile view -->
    <div class="space-y-4 sm:hidden">
      {plans.map((plan) => {
        const isPremiumHighlighted = plan.title === "Premium Plan" && plan.highlighted;

        return (
          <div class={`relative bg-white shadow rounded-lg ${isPremiumHighlighted ? 'border-2 border-yellow-300' : ''}`}>
            {/* Always visible Early Bird badge */}
            {isPremiumHighlighted && (
              <span
                class="absolute -top-6 right-6 inline-block bg-yellow-400 text-gray-900 px-3 py-1 rounded-md font-bold text-xs tracking-wide select-none shadow-lg"
                style="box-shadow: 0 0 8px rgba(253, 224, 71, 0.8);"
              >
                EARLY BIRD OFFER! ðŸŽ‰
              </span>
            )}

            <details>
              <summary
                class="cursor-pointer px-6 py-4 text-lg font-semibold bg-gray-100 rounded-t-lg flex items-center justify-between"
              >
                <span>{plan.title} â€” {plan.price}/month</span>
              </summary>

              <div class="p-4 border-t border-gray-200">
                <ul class="space-y-2 mb-4">
                  {plan.features.map((feature) => (
                    <li class="flex items-start text-sm">
                      <svg
                        class="h-5 w-5 text-green-500 mr-2 mt-1"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M5 13l4 4L19 7"
                        ></path>
                      </svg>
                      {feature}
                    </li>
                  ))}
                </ul>
                <p class="text-sm mb-2">{plan.footer.message}</p>
                <a
                  href={plan.footer.buttonLink}
                  class="inline-block w-full text-center px-4 py-2 text-white rounded-lg bg-gradient-to-r from-primary-600 to-accent-600 hover:opacity-90 transition"
                >
                  {plan.footer.buttonText}
                </a>
              </div>
            </details>
          </div>
        );
      })}
    </div>

    <!-- Desktop view -->
    <div class="hidden sm:grid gap-8 md:grid-cols-3 max-w-6xl mx-auto">
      {plans.map((plan) => {
        const isPremium = plan.title === "Premium Plan";
        const isFree = plan.title === "Free Plan";
        const isPremiumHighlighted = highlightedPlan?.title === "Premium Plan";

        const cardWrapperClasses = isPremiumHighlighted
          ? plan.highlighted
            ? "scale-105 opacity-100 z-20"
            : "scale-[0.95] opacity-90"
          : "scale-100 opacity-100";

        return (
          <div
            class={`relative flex flex-col h-full transition-all duration-300 ${cardWrapperClasses}`}
          >
            {isPremiumHighlighted && plan.highlighted && (
              <>
                <div class="absolute -left-6 sm:-left-24 -top-4 z-30 transform -rotate-12">
                  <div class="bg-yellow-400 text-gray-900 px-6 py-2 rounded-md shadow-lg border-2 border-gray-900 relative">
                    <div class="absolute inset-0 bg-yellow-300 rounded-md transform rotate-[1deg] -z-10"></div>
                    <p class="font-bold text-lg tracking-wider">EARLY BIRD OFFER! ðŸŽ‰</p>
                    <p class="text-sm text-center">Limited Time Only</p>
                  </div>
                </div>
                <div class="absolute inset-0 rounded-xl ring-4 ring-yellow-300 animate-pulse pointer-events-none -z-10"></div>
              </>
            )}

            <div
              class={`rounded-xl overflow-hidden flex flex-col h-full min-h-[600px] transition-all duration-300
                ${
                  isPremiumHighlighted && plan.highlighted
                    ? 'shadow-2xl bg-white border-2 border-yellow-300'
                    : 'bg-white shadow-lg'
                }
              `}
            >
              <div class="p-8 flex-grow">
                <div class="text-center mb-6">
                  <h3 class="text-2xl font-bold text-gray-800 p-6 sm:p-0">{plan.title}</h3>
                  <div class="relative mt-4 flex justify-center items-baseline">
                    {plan.originalPrice !== plan.price && (
                      <div class="relative inline-flex items-baseline mx-3">
                        <div class="relative">
                          <span class="text-5xl font-extrabold text-gray-400">{plan.originalPrice}</span>
                          <div class="absolute top-1/2 left-1/2 w-[140%] h-[6px] bg-[#ff4444] transform -translate-x-1/2 -translate-y-1/2 rotate-[-30deg] rounded-full" style="filter: drop-shadow(0 0 2px #ff4444);"></div>
                          <div class="absolute top-1/2 left-1/2 w-[140%] h-[6px] bg-[url('/slash-texture.png')] bg-cover transform -translate-x-1/2 -translate-y-1/2 rotate-[-45deg] mix-blend-overlay opacity-50"></div>
                        </div>
                      </div>
                    )}
                    <div class="flex items-baseline">
                      <span class="text-5xl font-extrabold text-black">{plan.price}</span>
                      <span class="text-xl text-black ml-1">/month</span>
                    </div>
                  </div>
                </div>

                <ul class="mt-8 space-y-4">
                  {plan.features.map((feature) => (
                    <li class="flex items-start">
                      <svg class="h-6 w-6 text-green-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
              </div>

              <div class="mt-auto px-8 pb-8">
                <div class="bg-gray-50 rounded-lg p-4 text-center min-h-[120px] flex flex-col justify-between">
                  <p class="text-gray-700 font-medium">{plan.footer.message}</p>

                  {plan.title === "Organization Plan" ? (
                    <a
                      href={plan.footer.buttonLink}
                      class="mt-4 inline-block text-blue-600 underline font-semibold hover:text-blue-800 transition"
                    >
                      {plan.footer.buttonText}
                    </a>
                  ) : (
                    <a
                      href={plan.footer.buttonLink}
                      class={`inline-block mt-4 px-6 py-3 font-medium rounded-lg hover:opacity-90 transition-all transform hover:scale-[1.02] ${
                        !isPremiumHighlighted || isPremium
                          ? "bg-gradient-to-r from-primary-600 to-accent-600 text-white"
                          : "bg-gradient-to-r from-green-500 to-lime-500 text-white"
                      }`}
                    >
                      {plan.footer.buttonText}
                    </a>
                  )}
                </div>
              </div>
            </div>
          </div>
        );
      })}
    </div>
  </div>
</section>
